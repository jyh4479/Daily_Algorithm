백트래킹(Backtracking) : 모든 조합의 수를 찾아보는 알고리즘 단, 조건에 만족하는 경우를 적용하여 탐색하는 경우를 대폭 줄인다 (ex N-queen)

15649 기존 순열을 구하는 코드에서 응용해야함 (참고: https://jdselectron.tistory.com/22)

15649, 15650, 15651, 15652 --> dfs말고 다른 방법으로 풀이해보기

9663(시간초과) 각 줄에 퀸은 하나만 존재할 수 있다는 아이디어 --> 계속 재귀를 이용했어도 계속 0,0부터 탐색했기때문에 결과가 중복으로 계산됐음 (참고: https://sihyungyou.github.io/baekjoon-9663/)

2580(시간초과) 백트래킹이 아니라 비효율 완전탐색으로 풀었음 --> 효율적인 코드 참고 필수

14888 pypy3에서만 통과 --> 시간초과 해결해보기 또한 a//b, int(a/b)에 따라 결과가 달라짐 이유 찾아보기

14889 시간줄이는 방법 생각해보기 --> 모든 케이스를 탐색하지만 중복적으로 한번 더 탐색하게됌 중복하지 않을 방법 생각해보기(경우의 수 미리 구하는 방식으로 일단 해결)
https://brownbears.tistory.com/459 --> 조합을 구해주는 라이브러리로 풀어보기....
https://potensj.tistory.com/110